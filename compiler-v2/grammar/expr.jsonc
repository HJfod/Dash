
{
    "ident-path": {
        "members": ["+parts"],
        "grammar": [
            { "match": "ident", "into": "parts" },
            {
                "while": { "match": "::" },
                "then": [
                    { "match": "ident", "into": "parts" }
                ]
            }
        ]
    },
    "entity": {
        "members": ["ident"],
        "grammar": [{ "match": "#ident-path", "into": "ident" }]
    },
    "block": {
        "members": ["list"],
        "grammar": [
            {
                "match": "{...}",
                "inner": [
                    { "match": "#expr-list", "into": "list" }
                ]
            }
        ]
    },
    "expr": {
        "grammar": [{ "return": "#binop" }]
    },
    "expr-list": {
        "members": ["+list"],
        "grammar": [
            {
                "while": { "not": { "peek": "eof" } },
                "then": [
                    { "match": "#expr", "into": "list" },
                    // Semicolons are optional because I cba to figure out a proper 
                    // way to match them in a reasonable way
                    { "while": { "match": ";" }, "then": [] }
                ]
            }
        ]
    },
    "main": {
        "grammar": [{ "return": "#expr-list" }]
    }
}
