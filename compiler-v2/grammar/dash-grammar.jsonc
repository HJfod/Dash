
{
    "keywords": {
        "strict": [
            // Literals
            "void", "true", "false", "none",
            // Constants & special variables
            "this", "super",
            // Declarations
            "var", "let", "fun", "struct", "enum", "using",
            "macro", "extends", "module", "type",
            // Prepositions
            "in", "is", "as", "where", "from",
            // Loops & conditionals
            "if", "else", "for", "while",
            // Control flow
            "try", "return", "break", "continue",
            // Visibility
            "extern", "public", "private",
            // Types
            "typeof", "const",
            // Other
            "codegen", "compiler_intrinsic"
        ],
        "contextual": [
            "get", "set", "assert", "default"
        ],
        "reserved": [
            // Declarations
            "trait", "class", "interface",
            // Control flow
            "unwrap", "yield", "match", "switch",
            // Visibility
            "export", "import",
            // Reactivity
            "depends", "required",
            // Other
            "mut", "mutable", "new", "null"
        ]
    },
    "rules": {
        "if": {
            "layout": {
                "cond": "rule",
                "truthy": "rule",
                "falsy": "maybe"
            },
            "grammar": [
                { "match": "if" },
                { "match": "#expr", "into": "cond" },
                { "match": "#block", "into": "truthy" },
                {
                    "if": { "match": "else" },
                    "then": [
                        {
                            "if": { "peek": "if" },
                            "then": [
                                { "match": "#if", "into": "falsy" }
                            ],
                            "else": [
                                { "match": "#block", "into": "falsy" }
                            ]
                        }
                    ]
                }
            ],
            "check": [
                { "equal": ["cond", "@bool"] },
                { "equal": ["truthy", "falsy"] }
            ]
        },
        "let": {
            "layout": {
                "name": "rule",
                "type": "maybe",
                "value": "maybe"
            },
            "grammar": [
                { "match": "let" },
                { "match": "ident", "into": "name" },
                {
                    "if": { "match": ":" },
                    "then": [
                        { "match": "#type", "into": "type" }
                    ]
                },
                {
                    "if": { "match": "=" },
                    "then": [
                        { "match": "#expr", "into": "value" }
                    ]
                }
            ],
            "check": [
                { "equal": ["type", "value"] }
            ]
        },
        "block": {
            "layout": {
                "list": "rule"
            },
            "grammar": [
                {
                    "match": "{}",
                    "inner": [
                        { "match": "#expr-list", "into": "list" }
                    ]
                }
            ]
        },
        "expr-list": {
            "layout": {
                "list": "list"
            },
            "grammar": [
                {
                    "match": "#expr",
                    "into": "list"
                }
            ]
        },
        "expr": {
            "grammar": [
                {
                    "if": { "peek": "let" },
                    "then": [{ "return": "#expr" }]
                },
                {
                    "if": { "peek": "if" },
                    "then": [{ "return": "#if" }]
                },
                {
                    "expected": "expression"
                }
            ]
        },
        "main": {
            "grammar": [{ "return": "#expr" }]
        }
    }
}
