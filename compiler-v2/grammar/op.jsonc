{
    "base-expr": {
        "grammar": [
            { "if": { "peek": "var" },    "then": [{ "return": "#var-decl" }] },
            { "if": { "peek": "let" },    "then": [{ "return": "#const-decl" }] },
            { "if": { "peek": "fun" },    "then": [{ "return": "#fun-decl" }] },
            { "if": { "peek": "if" },     "then": [{ "return": "#if" }] },
            { "if": { "peek": "while" },  "then": [{ "return": "#while" }] },
            { "if": { "peek": "ident" },  "then": [{ "return": "#entity" }] },
            { "if": { "peek": "::" },     "then": [{ "return": "#entity" }] },
            { "if": { "peek": "void" },   "then": [{ "return": "#void-lit" }] },
            { "if": { "peek": "true" },   "then": [{ "return": "#bool-lit" }] },
            { "if": { "peek": "false" },  "then": [{ "return": "#bool-lit" }] },
            { "if": { "peek": "int" },    "then": [{ "return": "#int-lit" }] },
            { "if": { "peek": "float" },  "then": [{ "return": "#float-lit" }] },
            { "if": { "peek": "string" }, "then": [{ "return": "#string-lit" }] },
            { "expected": "expression" }
        ]
    },
    "callop": {
        "members": ["target", "+args"],
        "grammar": [
            {
                "if": { "not": { "set": "target" } },
                "then": [{ "match": "#base-expr", "into": "target" }]
            },
            {
                "match": "(...)",
                "inner": [{
                    "while": { "not": { "peek": "eof" } },
                    "then": [
                        { "match": "#expr", "into": "args" },
                        // Allow trailing commas. Expect EOF if no comma provided
                        { "if": { "match": "," }, "then": [], "else": [{ "match": "eof:)" }] }
                    ]
                }]
            }
        ]
    },
    "indexop": {
        "members": ["target", "index"],
        "grammar": [
            {
                "if": { "not": { "set": "target" } },
                "then": [{ "match": "#base-expr", "into": "target" }]
            },
            {
                "match": "[...]",
                "inner": [
                    { "match": "#expr", "into": "index" },
                    // Allow trailing comma
                    { "if": { "match": "," }, "then": [] },
                    // Expect EOF
                    { "match": "eof:]" }
                ]
            }
        ]
    },
    "--match-suffix-expr": {
        "members": ["--temp"],
        "grammar": [
            { "match": "#base-expr", "into": "--temp" },
            {
                "while": { "not": { "peek": "eof" } },
                "then": [
                    {
                        "if": { "peek": "(...)" },
                        "then": [{
                            "match": "#callop",
                            "with": {
                                "target": "--temp"
                            },
                            "into": "--temp"
                        }]
                    },
                    {
                        "if": { "peek": "[...]" },
                        "then": [{
                            "match": "#indexop",
                            "with": {
                                "target": "--temp"
                            },
                            "into": "--temp"
                        }]
                    }
                ]
            },
            { "return": ":--temp" }
        ]
    },
    "--match-unop-token": {
        "grammar": [{ "return": ["+", "-", "!"] }]
    },
    "unop": {
        "members": ["op", "target"],
        "grammar": [
            {
                "if": { "not": { "set": "op" } },
                "then": [{ "match": "#--match-unop-token", "into": "op" }]
            },
            { "match": "#--match-unop", "into": "target" }
        ]
    },
    "--match-unop": {
        "members": ["--temp"],
        "grammar": [
            {
                "if": { "peek": "#--match-unop-token" },
                "then": [{
                    "match": "#unop",
                    "into": "--temp"
                }]
            }
        ]
    },
    "binop": {
        "members": ["lhs", "op", "rhs"],
        "grammar": {
            "muldiv": [
                { "match": "#unop", "into": "lhs" },
                { "match": ["*", "/", "%"], "into": "op" },
                { "match": "#unop", "into": "rhs" }
            ],
            "addsub": [
                { "match": "#binop:muldiv", "into": "lhs" },
                { "match": ["+", "-"], "into": "op" },
                { "match": "#binop:muldiv", "into": "rhs" }
            ],
            "ord": [
                { "match": "#binop:addsub", "into": "lhs" },
                { "match": ["<", ">", "<=", ">="], "into": "op" },
                { "match": "#binop:addsub", "into": "rhs" }
            ],
            "eq": [
                { "match": "#binop:ord", "into": "lhs" },
                { "match": ["==", "!="], "into": "op" },
                { "match": "#binop:ord", "into": "rhs" }
            ],
            "and": [
                { "match": "#binop:eq", "into": "lhs" },
                { "match": ["&&"], "into": "op" },
                { "match": "#binop:eq", "into": "rhs" }
            ],
            "or": [
                { "match": "#binop:and", "into": "lhs" },
                { "match": ["||"], "into": "op" },
                { "match": "#binop:and", "into": "rhs" }
            ],
            "seq": [
                { "match": "#binop:or", "into": "lhs" },
                { "match": ["=", "+=", "-=", "*=", "/=", "%="], "into": "op" },
                { "match": "#binop:or", "into": "rhs" }
            ]
        }
    }
}
